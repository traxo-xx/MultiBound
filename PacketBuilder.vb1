Public Class PacketBuilder
    Public Property Bytes As New List(Of Byte)
    Public Sub WriteByte(ByVal Value As Byte)
        Bytes.Add(Value)
    End Sub
    Public Sub WriteBytes(ByVal Values As Byte())
        For Each v As Byte In Values
            WriteByte(v)
        Next
    End Sub
    Public Sub WriteInt8(ByVal Value As SByte)
        WriteBytes(BitConverter.GetBytes(Value))
    End Sub
    Public Sub WriteInt16(ByVal Value As Short)
        WriteBytes(BitConverter.GetBytes(Value))
    End Sub
    Public Sub WriteInt32(ByVal Value As Integer)
        WriteBytes(BitConverter.GetBytes(Value))
    End Sub
    Public Sub WriteInt64(ByVal Value As Long)
        WriteBytes(BitConverter.GetBytes(Value))
    End Sub
    Public Sub WriteUInt16(ByVal Value As UShort)
        WriteBytes(BitConverter.GetBytes(Value))
    End Sub
    Public Sub WriteUInt32(ByVal Value As UInteger)
        WriteBytes(BitConverter.GetBytes(Value))
    End Sub
    Public Sub WriteUInt64(ByVal Value As ULong)
        WriteBytes(BitConverter.GetBytes(Value))
    End Sub
    Public Sub WriteString(ByVal Text As String)
        If Text.Length = 0 Then Bytes.AddRange({1, 0})
        Dim aarray = System.Text.Encoding.UTF8.GetBytes(Text)
        Dim barray = {CByte(Text.Length)}
        Bytes.AddRange(Combine({aarray, barray}))
    End Sub

    Public Function GetBytes() As Byte()
        Return Bytes.ToArray
    End Function
End Class
